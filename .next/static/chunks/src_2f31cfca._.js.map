{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Header.tsx"],"sourcesContent":["\"use client\";\n\nimport Link from \"next/link\";\nimport { useState } from \"react\";\n\nexport default function Header() {\n  const [isGamesOpen, setIsGamesOpen] = useState(false);\n\n  return (\n    <header className=\"bg-gray-900 border-b border-gray-800 sticky top-0 z-50\">\n      <nav className=\"container mx-auto px-4 py-4\">\n        <div className=\"flex items-center justify-between\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"flex items-center space-x-2\">\n            <div className=\"text-2xl font-bold text-white\">\n              <span className=\"text-orange-500\">UNBLOCKED</span>\n              <span className=\"text-white\">'S</span>\n            </div>\n          </Link>\n\n          {/* Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            <Link \n              href=\"/\" \n              className=\"text-white hover:text-orange-500 transition-colors px-4 py-2 rounded-lg hover:bg-gray-800\"\n            >\n              Home\n            </Link>\n            \n            <Link \n              href=\"/chat\" \n              className=\"text-gray-300 hover:text-orange-500 transition-colors px-4 py-2 rounded-lg hover:bg-gray-800\"\n            >\n              Chat\n            </Link>\n            \n            <Link \n              href=\"/store\" \n              className=\"text-gray-300 hover:text-orange-500 transition-colors px-4 py-2 rounded-lg hover:bg-gray-800\"\n            >\n              Store\n            </Link>\n            \n            <div className=\"relative\">\n              <button\n                onClick={() => setIsGamesOpen(!isGamesOpen)}\n                className=\"text-gray-300 hover:text-orange-500 transition-colors px-4 py-2 rounded-lg hover:bg-gray-800 flex items-center space-x-1\"\n              >\n                <span>Games</span>\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                </svg>\n              </button>\n              \n              {isGamesOpen && (\n                <div className=\"absolute top-full left-0 mt-2 w-48 bg-gray-800 rounded-lg shadow-lg border border-gray-700\">\n                  <Link \n                    href=\"/games\" \n                    className=\"block px-4 py-2 text-gray-300 hover:text-white hover:bg-gray-700 rounded-t-lg\"\n                    onClick={() => setIsGamesOpen(false)}\n                  >\n                    All Games\n                  </Link>\n                  <Link \n                    href=\"/games/trending\" \n                    className=\"block px-4 py-2 text-gray-300 hover:text-white hover:bg-gray-700\"\n                    onClick={() => setIsGamesOpen(false)}\n                  >\n                    Trending\n                  </Link>\n                  <Link \n                    href=\"/games/multiplayer\" \n                    className=\"block px-4 py-2 text-gray-300 hover:text-white hover:bg-gray-700 rounded-b-lg\"\n                    onClick={() => setIsGamesOpen(false)}\n                  >\n                    Multiplayer\n                  </Link>\n                </div>\n              )}\n            </div>\n            \n            <button className=\"text-gray-300 hover:text-orange-500 transition-colors p-2 rounded-lg hover:bg-gray-800\">\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n              </svg>\n            </button>\n          </div>\n\n          {/* Mobile menu button */}\n          <button className=\"md:hidden text-white p-2\">\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n            </svg>\n          </button>\n        </div>\n      </nav>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAI,WAAU;kCACvB,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAK,WAAU;8CAAkB;;;;;;8CAClC,6LAAC;oCAAK,WAAU;8CAAa;;;;;;;;;;;;;;;;;kCAKjC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,+JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAU;0CACX;;;;;;0CAID,6LAAC,+JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAU;0CACX;;;;;;0CAID,6LAAC,+JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAU;0CACX;;;;;;0CAID,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,SAAS,IAAM,eAAe,CAAC;wCAC/B,WAAU;;0DAEV,6LAAC;0DAAK;;;;;;0DACN,6LAAC;gDAAI,WAAU;gDAAU,MAAK;gDAAO,QAAO;gDAAe,SAAQ;0DACjE,cAAA,6LAAC;oDAAK,eAAc;oDAAQ,gBAAe;oDAAQ,aAAa;oDAAG,GAAE;;;;;;;;;;;;;;;;;oCAIxE,6BACC,6LAAC;wCAAI,WAAU;;0DACb,6LAAC,+JAAA,CAAA,UAAI;gDACH,MAAK;gDACL,WAAU;gDACV,SAAS,IAAM,eAAe;0DAC/B;;;;;;0DAGD,6LAAC,+JAAA,CAAA,UAAI;gDACH,MAAK;gDACL,WAAU;gDACV,SAAS,IAAM,eAAe;0DAC/B;;;;;;0DAGD,6LAAC,+JAAA,CAAA,UAAI;gDACH,MAAK;gDACL,WAAU;gDACV,SAAS,IAAM,eAAe;0DAC/B;;;;;;;;;;;;;;;;;;0CAOP,6LAAC;gCAAO,WAAU;0CAChB,cAAA,6LAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CACjE,cAAA,6LAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;kCAM3E,6LAAC;wBAAO,WAAU;kCAChB,cAAA,6LAAC;4BAAI,WAAU;4BAAU,MAAK;4BAAO,QAAO;4BAAe,SAAQ;sCACjE,cAAA,6LAAC;gCAAK,eAAc;gCAAQ,gBAAe;gCAAQ,aAAa;gCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOnF;GA7FwB;KAAA","debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/game/SnakeGame.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useRef, useState, useCallback } from \"react\";\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst GRID_SIZE = 20;\nconst CANVAS_WIDTH = 400;\nconst CANVAS_HEIGHT = 400;\n\nexport default function SnakeGame() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [snake, setSnake] = useState<Position[]>([{ x: 10, y: 10 }]);\n  const [food, setFood] = useState<Position>({ x: 15, y: 15 });\n  const [direction, setDirection] = useState<Position>({ x: 0, y: 0 });\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n\n  const generateFood = useCallback(() => {\n    const x = Math.floor(Math.random() * (CANVAS_WIDTH / GRID_SIZE));\n    const y = Math.floor(Math.random() * (CANVAS_HEIGHT / GRID_SIZE));\n    return { x, y };\n  }, []);\n\n  const resetGame = useCallback(() => {\n    setSnake([{ x: 10, y: 10 }]);\n    setFood(generateFood());\n    setDirection({ x: 0, y: 0 });\n    setGameOver(false);\n    setScore(0);\n    setGameStarted(false);\n  }, [generateFood]);\n\n  const startGame = useCallback(() => {\n    setGameStarted(true);\n    setDirection({ x: 1, y: 0 });\n  }, []);\n\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if (!gameStarted && !gameOver) {\n        if (e.key === ' ' || e.key === 'Enter') {\n          startGame();\n          return;\n        }\n      }\n\n      if (gameOver) {\n        if (e.key === ' ' || e.key === 'Enter') {\n          resetGame();\n          return;\n        }\n      }\n\n      if (!gameStarted || gameOver) return;\n\n      switch (e.key) {\n        case 'ArrowUp':\n        case 'w':\n        case 'W':\n          if (direction.y === 0) setDirection({ x: 0, y: -1 });\n          break;\n        case 'ArrowDown':\n        case 's':\n        case 'S':\n          if (direction.y === 0) setDirection({ x: 0, y: 1 });\n          break;\n        case 'ArrowLeft':\n        case 'a':\n        case 'A':\n          if (direction.x === 0) setDirection({ x: -1, y: 0 });\n          break;\n        case 'ArrowRight':\n        case 'd':\n        case 'D':\n          if (direction.x === 0) setDirection({ x: 1, y: 0 });\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [direction, gameStarted, gameOver, startGame, resetGame]);\n\n  useEffect(() => {\n    if (!gameStarted || gameOver) return;\n\n    const gameLoop = setInterval(() => {\n      setSnake(currentSnake => {\n        const newSnake = [...currentSnake];\n        const head = { ...newSnake[0] };\n        \n        head.x += direction.x;\n        head.y += direction.y;\n\n        // Check wall collision\n        if (head.x < 0 || head.x >= CANVAS_WIDTH / GRID_SIZE || \n            head.y < 0 || head.y >= CANVAS_HEIGHT / GRID_SIZE) {\n          setGameOver(true);\n          return currentSnake;\n        }\n\n        // Check self collision\n        if (newSnake.some(segment => segment.x === head.x && segment.y === head.y)) {\n          setGameOver(true);\n          return currentSnake;\n        }\n\n        newSnake.unshift(head);\n\n        // Check food collision\n        if (head.x === food.x && head.y === food.y) {\n          setScore(prev => prev + 10);\n          setFood(generateFood());\n        } else {\n          newSnake.pop();\n        }\n\n        return newSnake;\n      });\n    }, 150);\n\n    return () => clearInterval(gameLoop);\n  }, [direction, food, gameStarted, gameOver, generateFood]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.fillStyle = '#1f2937';\n    ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n    // Draw snake\n    ctx.fillStyle = '#10b981';\n    snake.forEach((segment, index) => {\n      ctx.fillStyle = index === 0 ? '#059669' : '#10b981';\n      ctx.fillRect(segment.x * GRID_SIZE, segment.y * GRID_SIZE, GRID_SIZE - 2, GRID_SIZE - 2);\n    });\n\n    // Draw food\n    ctx.fillStyle = '#ef4444';\n    ctx.fillRect(food.x * GRID_SIZE, food.y * GRID_SIZE, GRID_SIZE - 2, GRID_SIZE - 2);\n\n    // Draw grid\n    ctx.strokeStyle = '#374151';\n    ctx.lineWidth = 1;\n    for (let i = 0; i <= CANVAS_WIDTH; i += GRID_SIZE) {\n      ctx.beginPath();\n      ctx.moveTo(i, 0);\n      ctx.lineTo(i, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n    for (let i = 0; i <= CANVAS_HEIGHT; i += GRID_SIZE) {\n      ctx.beginPath();\n      ctx.moveTo(0, i);\n      ctx.lineTo(CANVAS_WIDTH, i);\n      ctx.stroke();\n    }\n  }, [snake, food]);\n\n  return (\n    <div className=\"bg-gray-800 rounded-lg p-6\">\n      <div className=\"text-center mb-4\">\n        <h2 className=\"text-2xl font-bold text-white mb-2\">Snake Game</h2>\n        <div className=\"text-lg text-orange-500 font-semibold\">Score: {score}</div>\n      </div>\n\n      <div className=\"flex justify-center mb-4\">\n        <canvas\n          ref={canvasRef}\n          width={CANVAS_WIDTH}\n          height={CANVAS_HEIGHT}\n          className=\"border-2 border-gray-600 rounded\"\n        />\n      </div>\n\n      <div className=\"text-center\">\n        {!gameStarted && !gameOver && (\n          <div>\n            <button\n              onClick={startGame}\n              className=\"bg-orange-500 hover:bg-orange-600 text-white px-6 py-2 rounded-lg font-medium transition-colors mb-2\"\n            >\n              Start Game\n            </button>\n            <p className=\"text-gray-300 text-sm\">Or press SPACE/ENTER to start</p>\n          </div>\n        )}\n\n        {gameOver && (\n          <div>\n            <div className=\"text-red-500 text-xl font-bold mb-2\">Game Over!</div>\n            <button\n              onClick={resetGame}\n              className=\"bg-orange-500 hover:bg-orange-600 text-white px-6 py-2 rounded-lg font-medium transition-colors mb-2\"\n            >\n              Play Again\n            </button>\n            <p className=\"text-gray-300 text-sm\">Or press SPACE/ENTER to restart</p>\n          </div>\n        )}\n\n        {gameStarted && !gameOver && (\n          <div className=\"text-gray-300 text-sm\">\n            Use arrow keys or WASD to control the snake\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 638, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/game/TetrisGame.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useRef, useState, useCallback } from \"react\";\n\nconst BOARD_WIDTH = 10;\nconst BOARD_HEIGHT = 20;\nconst BLOCK_SIZE = 30;\n\nconst TETROMINOS = {\n  I: [\n    [1, 1, 1, 1]\n  ],\n  O: [\n    [1, 1],\n    [1, 1]\n  ],\n  T: [\n    [0, 1, 0],\n    [1, 1, 1]\n  ],\n  S: [\n    [0, 1, 1],\n    [1, 1, 0]\n  ],\n  Z: [\n    [1, 1, 0],\n    [0, 1, 1]\n  ],\n  J: [\n    [1, 0, 0],\n    [1, 1, 1]\n  ],\n  L: [\n    [0, 0, 1],\n    [1, 1, 1]\n  ]\n};\n\nconst COLORS = {\n  I: '#00f0f0',\n  O: '#f0f000',\n  T: '#a000f0',\n  S: '#00f000',\n  Z: '#f00000',\n  J: '#0000f0',\n  L: '#f0a000'\n};\n\nexport default function TetrisGame() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [board, setBoard] = useState<number[][]>(() => \n    Array(BOARD_HEIGHT).fill(null).map(() => Array(BOARD_WIDTH).fill(0))\n  );\n  const [score, setScore] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [lines, setLines] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [currentPiece, setCurrentPiece] = useState<{\n    shape: number[][];\n    x: number;\n    y: number;\n    type: keyof typeof TETROMINOS;\n  } | null>(null);\n\n  const getRandomPiece = useCallback(() => {\n    const pieces = Object.keys(TETROMINOS) as (keyof typeof TETROMINOS)[];\n    const randomPiece = pieces[Math.floor(Math.random() * pieces.length)];\n    return {\n      shape: TETROMINOS[randomPiece],\n      x: Math.floor(BOARD_WIDTH / 2) - Math.floor(TETROMINOS[randomPiece][0].length / 2),\n      y: 0,\n      type: randomPiece\n    };\n  }, []);\n\n  const isValidMove = useCallback((piece: typeof currentPiece, newX: number, newY: number, newShape?: number[][]) => {\n    if (!piece) return false;\n    \n    const shape = newShape || piece.shape;\n    \n    for (let y = 0; y < shape.length; y++) {\n      for (let x = 0; x < shape[y].length; x++) {\n        if (shape[y][x]) {\n          const boardX = newX + x;\n          const boardY = newY + y;\n          \n          if (boardX < 0 || boardX >= BOARD_WIDTH || boardY >= BOARD_HEIGHT) {\n            return false;\n          }\n          \n          if (boardY >= 0 && board[boardY][boardX]) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }, [board]);\n\n  const rotatePiece = useCallback((shape: number[][]) => {\n    const rotated = shape[0].map((_, index) =>\n      shape.map(row => row[index]).reverse()\n    );\n    return rotated;\n  }, []);\n\n  const placePiece = useCallback(() => {\n    if (!currentPiece) return;\n\n    const newBoard = board.map(row => [...row]);\n    \n    for (let y = 0; y < currentPiece.shape.length; y++) {\n      for (let x = 0; x < currentPiece.shape[y].length; x++) {\n        if (currentPiece.shape[y][x]) {\n          const boardY = currentPiece.y + y;\n          const boardX = currentPiece.x + x;\n          if (boardY >= 0) {\n            newBoard[boardY][boardX] = 1;\n          }\n        }\n      }\n    }\n\n    // Check for completed lines\n    let linesCleared = 0;\n    for (let y = BOARD_HEIGHT - 1; y >= 0; y--) {\n      if (newBoard[y].every(cell => cell === 1)) {\n        newBoard.splice(y, 1);\n        newBoard.unshift(Array(BOARD_WIDTH).fill(0));\n        linesCleared++;\n        y++; // Check the same line again\n      }\n    }\n\n    if (linesCleared > 0) {\n      setLines(prev => prev + linesCleared);\n      setScore(prev => prev + linesCleared * 100 * level);\n      setLevel(prev => Math.floor((lines + linesCleared) / 10) + 1);\n    }\n\n    setBoard(newBoard);\n    \n    // Check game over\n    const newPiece = getRandomPiece();\n    if (!isValidMove(newPiece, newPiece.x, newPiece.y)) {\n      setGameOver(true);\n      setGameStarted(false);\n    } else {\n      setCurrentPiece(newPiece);\n    }\n  }, [currentPiece, board, level, lines, getRandomPiece, isValidMove]);\n\n  const startGame = useCallback(() => {\n    setBoard(Array(BOARD_HEIGHT).fill(null).map(() => Array(BOARD_WIDTH).fill(0)));\n    setScore(0);\n    setLevel(1);\n    setLines(0);\n    setGameOver(false);\n    setGameStarted(true);\n    setCurrentPiece(getRandomPiece());\n  }, [getRandomPiece]);\n\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if (!gameStarted) {\n        if (e.key === ' ' || e.key === 'Enter') {\n          startGame();\n        }\n        return;\n      }\n\n      if (gameOver) return;\n      if (!currentPiece) return;\n\n      switch (e.key) {\n        case 'ArrowLeft':\n        case 'a':\n        case 'A':\n          if (isValidMove(currentPiece, currentPiece.x - 1, currentPiece.y)) {\n            setCurrentPiece(prev => prev ? { ...prev, x: prev.x - 1 } : null);\n          }\n          break;\n        case 'ArrowRight':\n        case 'd':\n        case 'D':\n          if (isValidMove(currentPiece, currentPiece.x + 1, currentPiece.y)) {\n            setCurrentPiece(prev => prev ? { ...prev, x: prev.x + 1 } : null);\n          }\n          break;\n        case 'ArrowDown':\n        case 's':\n        case 'S':\n          if (isValidMove(currentPiece, currentPiece.x, currentPiece.y + 1)) {\n            setCurrentPiece(prev => prev ? { ...prev, y: prev.y + 1 } : null);\n          }\n          break;\n        case 'ArrowUp':\n        case 'w':\n        case 'W':\n        case ' ':\n          const rotatedShape = rotatePiece(currentPiece.shape);\n          if (isValidMove(currentPiece, currentPiece.x, currentPiece.y, rotatedShape)) {\n            setCurrentPiece(prev => prev ? { ...prev, shape: rotatedShape } : null);\n          }\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [currentPiece, gameStarted, gameOver, isValidMove, rotatePiece, startGame]);\n\n  useEffect(() => {\n    if (!gameStarted || gameOver || !currentPiece) return;\n\n    const dropInterval = setInterval(() => {\n      if (isValidMove(currentPiece, currentPiece.x, currentPiece.y + 1)) {\n        setCurrentPiece(prev => prev ? { ...prev, y: prev.y + 1 } : null);\n      } else {\n        placePiece();\n      }\n    }, Math.max(50, 500 - (level - 1) * 50));\n\n    return () => clearInterval(dropInterval);\n  }, [currentPiece, gameStarted, gameOver, level, isValidMove, placePiece]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.fillStyle = '#1f2937';\n    ctx.fillRect(0, 0, BOARD_WIDTH * BLOCK_SIZE, BOARD_HEIGHT * BLOCK_SIZE);\n\n    // Draw board\n    for (let y = 0; y < BOARD_HEIGHT; y++) {\n      for (let x = 0; x < BOARD_WIDTH; x++) {\n        if (board[y][x]) {\n          ctx.fillStyle = '#6b7280';\n          ctx.fillRect(x * BLOCK_SIZE, y * BLOCK_SIZE, BLOCK_SIZE - 1, BLOCK_SIZE - 1);\n        }\n      }\n    }\n\n    // Draw current piece\n    if (currentPiece) {\n      ctx.fillStyle = COLORS[currentPiece.type];\n      for (let y = 0; y < currentPiece.shape.length; y++) {\n        for (let x = 0; x < currentPiece.shape[y].length; x++) {\n          if (currentPiece.shape[y][x]) {\n            const drawX = (currentPiece.x + x) * BLOCK_SIZE;\n            const drawY = (currentPiece.y + y) * BLOCK_SIZE;\n            ctx.fillRect(drawX, drawY, BLOCK_SIZE - 1, BLOCK_SIZE - 1);\n          }\n        }\n      }\n    }\n\n    // Draw grid\n    ctx.strokeStyle = '#374151';\n    ctx.lineWidth = 1;\n    for (let x = 0; x <= BOARD_WIDTH; x++) {\n      ctx.beginPath();\n      ctx.moveTo(x * BLOCK_SIZE, 0);\n      ctx.lineTo(x * BLOCK_SIZE, BOARD_HEIGHT * BLOCK_SIZE);\n      ctx.stroke();\n    }\n    for (let y = 0; y <= BOARD_HEIGHT; y++) {\n      ctx.beginPath();\n      ctx.moveTo(0, y * BLOCK_SIZE);\n      ctx.lineTo(BOARD_WIDTH * BLOCK_SIZE, y * BLOCK_SIZE);\n      ctx.stroke();\n    }\n  }, [board, currentPiece]);\n\n  return (\n    <div className=\"bg-gray-800 rounded-lg p-6\">\n      <div className=\"flex flex-col lg:flex-row gap-6\">\n        <div className=\"flex-1\">\n          <div className=\"text-center mb-4\">\n            <h2 className=\"text-2xl font-bold text-white mb-2\">Tetris</h2>\n          </div>\n\n          <div className=\"flex justify-center mb-4\">\n            <canvas\n              ref={canvasRef}\n              width={BOARD_WIDTH * BLOCK_SIZE}\n              height={BOARD_HEIGHT * BLOCK_SIZE}\n              className=\"border-2 border-gray-600 rounded\"\n            />\n          </div>\n        </div>\n\n        <div className=\"lg:w-48\">\n          <div className=\"bg-gray-700 rounded-lg p-4 mb-4\">\n            <h3 className=\"text-lg font-bold text-white mb-2\">Stats</h3>\n            <div className=\"space-y-2 text-sm\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-300\">Score:</span>\n                <span className=\"text-orange-500 font-semibold\">{score}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-300\">Level:</span>\n                <span className=\"text-orange-500 font-semibold\">{level}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-300\">Lines:</span>\n                <span className=\"text-orange-500 font-semibold\">{lines}</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-gray-700 rounded-lg p-4\">\n            <h3 className=\"text-lg font-bold text-white mb-2\">Controls</h3>\n            <div className=\"space-y-1 text-xs text-gray-300\">\n              <div>← → : Move</div>\n              <div>↓ : Soft drop</div>\n              <div>↑ / Space : Rotate</div>\n              <div>WASD also work</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"text-center mt-4\">\n        {!gameStarted && !gameOver && (\n          <div>\n            <button\n              onClick={startGame}\n              className=\"bg-orange-500 hover:bg-orange-600 text-white px-6 py-2 rounded-lg font-medium transition-colors mb-2\"\n            >\n              Start Game\n            </button>\n            <p className=\"text-gray-300 text-sm\">Or press SPACE/ENTER to start</p>\n          </div>\n        )}\n\n        {gameOver && (\n          <div>\n            <div className=\"text-red-500 text-xl font-bold mb-2\">Game Over!</div>\n            <div className=\"text-gray-300 mb-2\">Final Score: {score}</div>\n            <button\n              onClick={startGame}\n              className=\"bg-orange-500 hover:bg-orange-600 text-white px-6 py-2 rounded-lg font-medium transition-colors mb-2\"\n            >\n              Play Again\n            </button>\n            <p className=\"text-gray-300 text-sm\">Or press SPACE/ENTER to restart</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1347, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/game/PongGame.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useRef, useState, useCallback } from \"react\";\n\nconst CANVAS_WIDTH = 600;\nconst CANVAS_HEIGHT = 400;\nconst PADDLE_WIDTH = 10;\nconst PADDLE_HEIGHT = 80;\nconst BALL_SIZE = 10;\nconst PADDLE_SPEED = 5;\nconst BALL_SPEED = 4;\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\ninterface Ball extends Position {\n  dx: number;\n  dy: number;\n}\n\nexport default function PongGame() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [player1Score, setPlayer1Score] = useState(0);\n  const [player2Score, setPlayer2Score] = useState(0);\n  const [winner, setWinner] = useState<string | null>(null);\n  \n  const [player1Y, setPlayer1Y] = useState(CANVAS_HEIGHT / 2 - PADDLE_HEIGHT / 2);\n  const [player2Y, setPlayer2Y] = useState(CANVAS_HEIGHT / 2 - PADDLE_HEIGHT / 2);\n  const [ball, setBall] = useState<Ball>({\n    x: CANVAS_WIDTH / 2,\n    y: CANVAS_HEIGHT / 2,\n    dx: BALL_SPEED,\n    dy: BALL_SPEED\n  });\n\n  const [keys, setKeys] = useState<Set<string>>(new Set());\n\n  const resetBall = useCallback(() => {\n    setBall({\n      x: CANVAS_WIDTH / 2,\n      y: CANVAS_HEIGHT / 2,\n      dx: Math.random() > 0.5 ? BALL_SPEED : -BALL_SPEED,\n      dy: (Math.random() - 0.5) * BALL_SPEED\n    });\n  }, []);\n\n  const startGame = useCallback(() => {\n    setGameStarted(true);\n    setGameOver(false);\n    setPlayer1Score(0);\n    setPlayer2Score(0);\n    setWinner(null);\n    setPlayer1Y(CANVAS_HEIGHT / 2 - PADDLE_HEIGHT / 2);\n    setPlayer2Y(CANVAS_HEIGHT / 2 - PADDLE_HEIGHT / 2);\n    resetBall();\n  }, [resetBall]);\n\n  const checkWinner = useCallback((p1Score: number, p2Score: number) => {\n    if (p1Score >= 10) {\n      setWinner(\"Player 1\");\n      setGameOver(true);\n      setGameStarted(false);\n    } else if (p2Score >= 10) {\n      setWinner(\"Player 2\");\n      setGameOver(true);\n      setGameStarted(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (!gameStarted && !gameOver) {\n        if (e.key === ' ' || e.key === 'Enter') {\n          startGame();\n          return;\n        }\n      }\n\n      if (gameOver) {\n        if (e.key === ' ' || e.key === 'Enter') {\n          startGame();\n          return;\n        }\n      }\n\n      setKeys(prev => new Set(prev).add(e.key.toLowerCase()));\n    };\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      setKeys(prev => {\n        const newKeys = new Set(prev);\n        newKeys.delete(e.key.toLowerCase());\n        return newKeys;\n      });\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameStarted, gameOver, startGame]);\n\n  useEffect(() => {\n    if (!gameStarted || gameOver) return;\n\n    const gameLoop = setInterval(() => {\n      // Move paddles\n      setPlayer1Y(prev => {\n        let newY = prev;\n        if (keys.has('w') && prev > 0) {\n          newY = prev - PADDLE_SPEED;\n        }\n        if (keys.has('s') && prev < CANVAS_HEIGHT - PADDLE_HEIGHT) {\n          newY = prev + PADDLE_SPEED;\n        }\n        return Math.max(0, Math.min(CANVAS_HEIGHT - PADDLE_HEIGHT, newY));\n      });\n\n      setPlayer2Y(prev => {\n        let newY = prev;\n        if (keys.has('arrowup') && prev > 0) {\n          newY = prev - PADDLE_SPEED;\n        }\n        if (keys.has('arrowdown') && prev < CANVAS_HEIGHT - PADDLE_HEIGHT) {\n          newY = prev + PADDLE_SPEED;\n        }\n        return Math.max(0, Math.min(CANVAS_HEIGHT - PADDLE_HEIGHT, newY));\n      });\n\n      // Move ball\n      setBall(prevBall => {\n        let newBall = {\n          x: prevBall.x + prevBall.dx,\n          y: prevBall.y + prevBall.dy,\n          dx: prevBall.dx,\n          dy: prevBall.dy\n        };\n\n        // Ball collision with top and bottom walls\n        if (newBall.y <= 0 || newBall.y >= CANVAS_HEIGHT - BALL_SIZE) {\n          newBall.dy = -newBall.dy;\n        }\n\n        // Ball collision with paddles\n        // Player 1 paddle (left)\n        if (newBall.x <= PADDLE_WIDTH && \n            newBall.y >= player1Y && \n            newBall.y <= player1Y + PADDLE_HEIGHT) {\n          newBall.dx = -newBall.dx;\n          newBall.x = PADDLE_WIDTH;\n          // Add some angle based on where the ball hits the paddle\n          const hitPos = (newBall.y - player1Y) / PADDLE_HEIGHT;\n          newBall.dy = (hitPos - 0.5) * BALL_SPEED * 2;\n        }\n\n        // Player 2 paddle (right)\n        if (newBall.x >= CANVAS_WIDTH - PADDLE_WIDTH - BALL_SIZE && \n            newBall.y >= player2Y && \n            newBall.y <= player2Y + PADDLE_HEIGHT) {\n          newBall.dx = -newBall.dx;\n          newBall.x = CANVAS_WIDTH - PADDLE_WIDTH - BALL_SIZE;\n          // Add some angle based on where the ball hits the paddle\n          const hitPos = (newBall.y - player2Y) / PADDLE_HEIGHT;\n          newBall.dy = (hitPos - 0.5) * BALL_SPEED * 2;\n        }\n\n        // Ball goes out of bounds (scoring)\n        if (newBall.x < 0) {\n          setPlayer2Score(prev => {\n            const newScore = prev + 1;\n            checkWinner(player1Score, newScore);\n            return newScore;\n          });\n          return {\n            x: CANVAS_WIDTH / 2,\n            y: CANVAS_HEIGHT / 2,\n            dx: BALL_SPEED,\n            dy: (Math.random() - 0.5) * BALL_SPEED\n          };\n        }\n\n        if (newBall.x > CANVAS_WIDTH) {\n          setPlayer1Score(prev => {\n            const newScore = prev + 1;\n            checkWinner(newScore, player2Score);\n            return newScore;\n          });\n          return {\n            x: CANVAS_WIDTH / 2,\n            y: CANVAS_HEIGHT / 2,\n            dx: -BALL_SPEED,\n            dy: (Math.random() - 0.5) * BALL_SPEED\n          };\n        }\n\n        return newBall;\n      });\n    }, 16); // ~60 FPS\n\n    return () => clearInterval(gameLoop);\n  }, [gameStarted, gameOver, keys, player1Y, player2Y, player1Score, player2Score, checkWinner]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.fillStyle = '#1f2937';\n    ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n    // Draw center line\n    ctx.strokeStyle = '#6b7280';\n    ctx.lineWidth = 2;\n    ctx.setLineDash([10, 10]);\n    ctx.beginPath();\n    ctx.moveTo(CANVAS_WIDTH / 2, 0);\n    ctx.lineTo(CANVAS_WIDTH / 2, CANVAS_HEIGHT);\n    ctx.stroke();\n    ctx.setLineDash([]);\n\n    // Draw paddles\n    ctx.fillStyle = '#10b981';\n    // Player 1 paddle (left)\n    ctx.fillRect(0, player1Y, PADDLE_WIDTH, PADDLE_HEIGHT);\n    // Player 2 paddle (right)\n    ctx.fillRect(CANVAS_WIDTH - PADDLE_WIDTH, player2Y, PADDLE_WIDTH, PADDLE_HEIGHT);\n\n    // Draw ball\n    ctx.fillStyle = '#ef4444';\n    ctx.fillRect(ball.x, ball.y, BALL_SIZE, BALL_SIZE);\n\n    // Draw scores\n    ctx.fillStyle = '#ffffff';\n    ctx.font = '48px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText(player1Score.toString(), CANVAS_WIDTH / 4, 60);\n    ctx.fillText(player2Score.toString(), (3 * CANVAS_WIDTH) / 4, 60);\n  }, [player1Y, player2Y, ball, player1Score, player2Score]);\n\n  return (\n    <div className=\"bg-gray-800 rounded-lg p-6\">\n      <div className=\"text-center mb-4\">\n        <h2 className=\"text-2xl font-bold text-white mb-2\">Pong</h2>\n        <div className=\"flex justify-center space-x-8 text-lg\">\n          <div className=\"text-green-500 font-semibold\">\n            Player 1: {player1Score}\n          </div>\n          <div className=\"text-blue-500 font-semibold\">\n            Player 2: {player2Score}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex justify-center mb-4\">\n        <canvas\n          ref={canvasRef}\n          width={CANVAS_WIDTH}\n          height={CANVAS_HEIGHT}\n          className=\"border-2 border-gray-600 rounded\"\n        />\n      </div>\n\n      <div className=\"text-center\">\n        {!gameStarted && !gameOver && (\n          <div>\n            <button\n              onClick={startGame}\n              className=\"bg-orange-500 hover:bg-orange-600 text-white px-6 py-2 rounded-lg font-medium transition-colors mb-4\"\n            >\n              Start Game\n            </button>\n            <p className=\"text-gray-300 text-sm mb-4\">Or press SPACE/ENTER to start</p>\n          </div>\n        )}\n\n        {gameOver && winner && (\n          <div>\n            <div className=\"text-orange-500 text-2xl font-bold mb-2\">\n              {winner} Wins!\n            </div>\n            <div className=\"text-gray-300 mb-4\">\n              Final Score: {player1Score} - {player2Score}\n            </div>\n            <button\n              onClick={startGame}\n              className=\"bg-orange-500 hover:bg-orange-600 text-white px-6 py-2 rounded-lg font-medium transition-colors mb-4\"\n            >\n              Play Again\n            </button>\n            <p className=\"text-gray-300 text-sm mb-4\">Or press SPACE/ENTER to restart</p>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 max-w-md mx-auto\">\n          <div className=\"bg-gray-700 rounded-lg p-3\">\n            <h4 className=\"text-green-500 font-semibold mb-2\">Player 1 Controls</h4>\n            <div className=\"text-sm text-gray-300\">\n              <div>W - Move Up</div>\n              <div>S - Move Down</div>\n            </div>\n          </div>\n          <div className=\"bg-gray-700 rounded-lg p-3\">\n            <h4 className=\"text-blue-500 font-semibold mb-2\">Player 2 Controls</h4>\n            <div className=\"text-sm text-gray-300\">\n              <div>↑ - Move Up</div>\n              <div>↓ - Move Down</div>\n            </div>\n          </div>\n        </div>\n\n        {gameStarted && !gameOver && (\n          <div className=\"text-gray-300 text-sm mt-4\">\n            First to 10 points wins!\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1885, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/game/GameLauncher.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport SnakeGame from \"./SnakeGame\";\nimport TetrisGame from \"./TetrisGame\";\nimport PongGame from \"./PongGame\";\n\ninterface GameLauncherProps {\n  gameId: string;\n}\n\nconst gameData: Record<string, { title: string; description: string; instructions: string }> = {\n  snake: {\n    title: \"Snake Game\",\n    description: \"Classic snake game where you eat food to grow longer while avoiding walls and your own tail.\",\n    instructions: \"Use arrow keys or WASD to control the snake. Eat the red food to grow and increase your score!\"\n  },\n  tetris: {\n    title: \"Tetris\",\n    description: \"The legendary puzzle game where you arrange falling blocks to clear lines.\",\n    instructions: \"Use arrow keys to move and rotate pieces. Clear horizontal lines to score points!\"\n  },\n  pong: {\n    title: \"Pong\",\n    description: \"Classic ping pong game for one or two players.\",\n    instructions: \"Player 1: Use W/S keys. Player 2: Use Up/Down arrows. First to 10 points wins!\"\n  },\n  pacman: {\n    title: \"Pac-Man\",\n    description: \"Navigate the maze, eat dots, and avoid the ghosts!\",\n    instructions: \"Use arrow keys to move Pac-Man. Eat all dots while avoiding ghosts. Power pellets make ghosts vulnerable!\"\n  },\n  \"flappy-bird\": {\n    title: \"Flappy Bird\",\n    description: \"Navigate through pipes by tapping to flap your wings.\",\n    instructions: \"Press spacebar or click to flap. Avoid hitting pipes or the ground!\"\n  },\n  \"2048\": {\n    title: \"2048\",\n    description: \"Combine numbered tiles to reach the 2048 tile.\",\n    instructions: \"Use arrow keys to slide tiles. When two tiles with the same number touch, they merge!\"\n  },\n  \"space-invaders\": {\n    title: \"Space Invaders\",\n    description: \"Defend Earth from waves of alien invaders.\",\n    instructions: \"Use arrow keys to move, spacebar to shoot. Destroy all aliens before they reach the bottom!\"\n  },\n  breakout: {\n    title: \"Breakout\",\n    description: \"Break all the bricks with your ball and paddle.\",\n    instructions: \"Use left/right arrow keys or mouse to move the paddle. Don't let the ball fall!\"\n  }\n};\n\nexport default function GameLauncher({ gameId }: GameLauncherProps) {\n  const [gameComponent, setGameComponent] = useState<JSX.Element | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const loadGame = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Simulate loading time for better UX\n        await new Promise(resolve => setTimeout(resolve, 1000));\n\n        switch (gameId) {\n          case \"snake\":\n            setGameComponent(<SnakeGame />);\n            break;\n          case \"tetris\":\n            setGameComponent(<TetrisGame />);\n            break;\n          case \"pong\":\n            setGameComponent(<PongGame />);\n            break;\n          case \"pacman\":\n          case \"flappy-bird\":\n          case \"2048\":\n          case \"space-invaders\":\n          case \"breakout\":\n          case \"tic-tac-toe\":\n          case \"chess\":\n          case \"checkers\":\n          case \"connect-four\":\n          case \"frogger\":\n          case \"asteroids\":\n          case \"centipede\":\n          case \"missile-command\":\n            setGameComponent(\n              <div className=\"bg-gray-800 rounded-lg p-8 text-center\">\n                <div className=\"text-6xl mb-4\">🎮</div>\n                <h3 className=\"text-2xl font-bold text-white mb-4\">\n                  {gameData[gameId]?.title || \"Game\"}\n                </h3>\n                <p className=\"text-gray-300 mb-6\">\n                  {gameData[gameId]?.description || \"This game is coming soon!\"}\n                </p>\n                <div className=\"bg-gray-700 rounded-lg p-4 mb-6\">\n                  <h4 className=\"text-lg font-semibold text-white mb-2\">How to Play:</h4>\n                  <p className=\"text-gray-300\">\n                    {gameData[gameId]?.instructions || \"Instructions will be available when the game is ready.\"}\n                  </p>\n                </div>\n                <div className=\"text-orange-500 font-medium\">\n                  Game implementation coming soon!\n                </div>\n              </div>\n            );\n            break;\n          default:\n            throw new Error(\"Game not found\");\n        }\n      } catch (err) {\n        setError(err instanceof Error ? err.message : \"Failed to load game\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadGame();\n  }, [gameId]);\n\n  if (loading) {\n    return (\n      <div className=\"bg-gray-800 rounded-lg p-8 text-center\">\n        <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-orange-500 mx-auto mb-4\"></div>\n        <h3 className=\"text-xl font-bold text-white mb-2\">Loading Game...</h3>\n        <p className=\"text-gray-300\">Please wait while we prepare your game</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-gray-800 rounded-lg p-8 text-center\">\n        <div className=\"text-6xl mb-4\">❌</div>\n        <h3 className=\"text-2xl font-bold text-red-500 mb-4\">Game Not Found</h3>\n        <p className=\"text-gray-300 mb-6\">\n          Sorry, the game \"{gameId}\" could not be loaded.\n        </p>\n        <button\n          onClick={() => window.history.back()}\n          className=\"bg-orange-500 hover:bg-orange-600 text-white px-6 py-2 rounded-lg font-medium transition-colors\"\n        >\n          Go Back\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"game-launcher\">\n      {gameComponent}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2179, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/games/%5BgameId%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useParams, useRouter } from \"next/navigation\";\nimport Header from \"@/components/Header\";\nimport GameLauncher from \"@/components/game/GameLauncher\";\n\nexport default function GamePage() {\n  const params = useParams();\n  const router = useRouter();\n  const gameId = params.gameId as string;\n\n  return (\n    <div className=\"min-h-screen bg-gray-900\">\n      <Header />\n      \n      <main className=\"container mx-auto px-4 py-8\">\n        <div className=\"mb-6\">\n          <button\n            onClick={() => router.push(\"/games\")}\n            className=\"flex items-center space-x-2 text-orange-500 hover:text-orange-400 transition-colors mb-4\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n            </svg>\n            <span>Back to Games</span>\n          </button>\n        </div>\n\n        <GameLauncher gameId={gameId} />\n      </main>\n\n      {/* Footer */}\n      <footer className=\"bg-gray-800 border-t border-gray-700 py-8 mt-12\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <p className=\"text-gray-400\">\n            © 2024 Unblocked Games. All rights reserved. Play responsibly.\n          </p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,SAAS,OAAO,MAAM;IAE5B,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,+HAAA,CAAA,UAAM;;;;;0BAEP,6LAAC;gBAAK,WAAU;;kCACd,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BACC,SAAS,IAAM,OAAO,IAAI,CAAC;4BAC3B,WAAU;;8CAEV,6LAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CACjE,cAAA,6LAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;;;;;;;8CAEvE,6LAAC;8CAAK;;;;;;;;;;;;;;;;;kCAIV,6LAAC,6IAAA,CAAA,UAAY;wBAAC,QAAQ;;;;;;;;;;;;0BAIxB,6LAAC;gBAAO,WAAU;0BAChB,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;;;;;;;;;;;AAOvC;GAnCwB;;QACP,qIAAA,CAAA,YAAS;QACT,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}}]
}